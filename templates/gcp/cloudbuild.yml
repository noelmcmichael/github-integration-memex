# Cloud Build configuration for CI/CD
steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/${_APP_NAME}:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/${_APP_NAME}:latest',
      '--cache-from', 'gcr.io/$PROJECT_ID/${_APP_NAME}:latest',
      '.'
    ]
  
  # Push the image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_APP_NAME}:$COMMIT_SHA']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/${_APP_NAME}:latest']
  
  # Run tests (optional)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'run',
      '--rm',
      '-e', 'NODE_ENV=test',
      '-e', 'DATABASE_URL=postgresql://postgres:postgres@localhost:5432/test_db',
      'gcr.io/$PROJECT_ID/${_APP_NAME}:$COMMIT_SHA',
      'npm', 'test'
    ]
    env:
      - 'NODE_ENV=test'
  
  # Deploy to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', '${_APP_NAME}',
      '--image', 'gcr.io/$PROJECT_ID/${_APP_NAME}:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8080',
      '--cpu', '1',
      '--memory', '512Mi',
      '--min-instances', '0',
      '--max-instances', '10',
      '--timeout', '300s'
    ]
  
  # Update traffic (for blue-green deployment)
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'services', 'update-traffic', '${_APP_NAME}',
      '--region', '${_REGION}',
      '--to-latest'
    ]

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# Substitutions (variables)
substitutions:
  _APP_NAME: 'my-web-app'
  _REGION: 'us-central1'

# Build timeout
timeout: '1200s'

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/${_APP_NAME}:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/${_APP_NAME}:latest'